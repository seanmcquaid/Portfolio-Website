{"version":3,"sources":["images/tableManagementSystem.jp2","images/webFakeBook.jp2","images/whacAMole.jp2","images/webChat.jp2","pages/Projects/projectsList.js","pages/Projects/Project.js","pages/Projects/index.js"],"names":["module","exports","title","image","webFakeBook","description","repoLink","demoLink","tableManagementSystem","webChat","whacAMole","ProjectContainer","styled","li","ProjectTitle","label","ProjectImage","img","ButtonsContainer","div","Project","projectId","id","data-testid","src","alt","href","target","fadeInAnimation","keyframes","ProjectsPageContainer","Header","header","Main","main","ProjectsList","ul","Projects","projectsList","map","project","i","key"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,mD,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,qJCK5B,GACb,CACEC,MAAO,gBACPC,MAAOC,IACPC,YACE,2JACFC,SAAU,sDACVC,SAAU,+CAEZ,CACEL,MAAO,0BACPC,MAAOK,IACPH,YACE,uGACFC,SAAU,0DAEZ,CACEJ,MAAO,WACPC,MAAOM,IACPJ,YACE,iIACFC,SAAU,2CAEZ,CACEJ,MAAO,cACPC,MAAOO,IACPL,YACE,kJACFC,SAAU,+C,mwBC5Bd,IAiDMK,EAAmBC,IAAOC,GAAV,KAehBC,EAAeF,IAAOG,MAAV,KAMZC,EAAeJ,IAAOK,IAAV,KAMZC,EAAmBN,IAAOO,IAAV,KAePC,EA3FC,SAAC,GAAD,IACdlB,EADc,EACdA,MACAC,EAFc,EAEdA,MACAE,EAHc,EAGdA,YACAC,EAJc,EAIdA,SACAe,EALc,EAKdA,UACAd,EANc,EAMdA,SANc,OAQd,kBAACI,EAAD,CACEW,GAAI,cAAgBD,EACpBE,cAAa,cAAgBF,GAE7B,kBAACP,EAAD,CACEQ,GAAI,eAAiBD,EACrBE,cAAa,eAAiBF,GAE7BnB,GAEH,kBAACc,EAAD,CACEQ,IAAKrB,EACLsB,IAAKvB,EACLoB,GAAI,eAAiBD,EACrBE,cAAa,eAAiBF,IAEhC,kBAAC,IAAD,CACEC,GAAI,qBAAuBD,EAC3BE,cAAa,qBAAuBF,GAEnChB,GAEH,kBAACa,EAAD,KACE,kBAAC,IAAD,CACEQ,KAAMpB,EACNqB,OAAO,QACPL,GAAI,oBAAsBD,EAC1BE,cAAa,oBAAsBF,EACnCnB,MAAK,UAAKA,EAAL,sBALP,eASCK,EACC,kBAAC,IAAD,CAAoBmB,KAAMnB,EAAUoB,OAAO,SAA3C,aAGE,Q,6uCC3CV,IAuBMC,EAAkBC,YAAH,KASfC,EAAwBlB,IAAOO,IAAV,IAOZS,GAQTG,EAASnB,IAAOoB,OAAV,KAQNC,EAAOrB,IAAOsB,KAAV,KAQJC,EAAevB,IAAOwB,GAAV,KAgBHC,UA/EE,kBACf,kBAACP,EAAD,CAAuBR,GAAG,eAAeC,cAAY,gBACnD,kBAACQ,EAAD,CAAQT,GAAG,qBAAqBC,cAAY,sBAC1C,kBAAC,IAAD,kBAEF,kBAACU,EAAD,KACE,kBAACE,EAAD,CAAcb,GAAG,eAAeC,cAAY,gBACzCe,EAAaC,KAAI,SAACC,EAASC,GAAV,OAChB,kBAAC,EAAD,CACEC,IAAKD,EACLvC,MAAOsC,EAAQtC,MACfC,MAAOqC,EAAQrC,MACfE,YAAamC,EAAQnC,YACrBC,SAAUkC,EAAQlC,SAClBe,UAAWoB,EACXlC,SAAUiC,EAAQjC","file":"static/js/3.caeaab7e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tableManagementSystem.dae8dcce.jp2\";","module.exports = __webpack_public_path__ + \"static/media/webFakeBook.66dbc556.jp2\";","module.exports = __webpack_public_path__ + \"static/media/whacAMole.6e03f79b.jp2\";","module.exports = __webpack_public_path__ + \"static/media/webChat.e3f46ed5.jp2\";","import tableManagementSystem from 'images/tableManagementSystem.jp2';\nimport webFakeBook from 'images/webFakeBook.jp2';\nimport whacAMole from 'images/whacAMole.jp2';\nimport webChat from 'images/webChat.jp2';\n\nexport default [\n  {\n    title: 'Web Fake Book',\n    image: webFakeBook,\n    description:\n      'Built a Web solution to a problem for college music students, having free access to chord changes for jazz standards with the MERN stack and TypeScript.',\n    repoLink: 'https://github.com/seanmcquaid/Web-Fake-Book-Client',\n    demoLink: 'https://web-fake-book-client.herokuapp.com/',\n  },\n  {\n    title: 'Table Management System',\n    image: tableManagementSystem,\n    description:\n      'Created with Vue.js, Express and GraphQL to manage table configurations for restaurants during COVID',\n    repoLink: 'https://github.com/seanmcquaid/Table-Management-System',\n  },\n  {\n    title: 'Web Chat',\n    image: webChat,\n    description:\n      'Built a Web Chat app for users to communicate with people on their friends list in real time with the MERN stack and Socket.io',\n    repoLink: 'https://github.com/seanmcquaid/Web-Chat',\n  },\n  {\n    title: 'Whac-A-Mole',\n    image: whacAMole,\n    description:\n      'Built with React/TypeScript on the Front End and Java/Springboot on the Back End, this is a recreation of the classic arcade game, Whac-A-Mole.',\n    repoLink: 'https://github.com/seanmcquaid/Whac-A-Mole',\n  },\n];\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ParagraphText, ExternalLinkButton } from 'components';\nimport PropTypes from 'prop-types';\n\nconst Project = ({\n  title,\n  image,\n  description,\n  repoLink,\n  projectId,\n  demoLink,\n}) => (\n  <ProjectContainer\n    id={'projectInfo' + projectId}\n    data-testid={'projectInfo' + projectId}\n  >\n    <ProjectTitle\n      id={'projectTitle' + projectId}\n      data-testid={'projectTitle' + projectId}\n    >\n      {title}\n    </ProjectTitle>\n    <ProjectImage\n      src={image}\n      alt={title}\n      id={'projectImage' + projectId}\n      data-testid={'projectImage' + projectId}\n    />\n    <ParagraphText\n      id={'projectDescription' + projectId}\n      data-testid={'projectDescription' + projectId}\n    >\n      {description}\n    </ParagraphText>\n    <ButtonsContainer>\n      <ExternalLinkButton\n        href={repoLink}\n        target=\"blank\"\n        id={'projectRepoButton' + projectId}\n        data-testid={'projectRepoButton' + projectId}\n        title={`${title} GitHub Repo Link`}\n      >\n        GitHub Repo\n      </ExternalLinkButton>\n      {demoLink ? (\n        <ExternalLinkButton href={demoLink} target=\"blank\">\n          Live Demo\n        </ExternalLinkButton>\n      ) : null}\n    </ButtonsContainer>\n  </ProjectContainer>\n);\n\nconst ProjectContainer = styled.li`\n  border: 2px solid #00000096;\n  margin: 0.75rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 26rem;\n  height: 28rem;\n  @media (max-width: 975px) {\n    margin: 1rem 0;\n    border: none;\n  }\n`;\n\nconst ProjectTitle = styled.label`\n  font-size: 1.25rem;\n  color: white;\n  padding: 0.25rem;\n`;\n\nconst ProjectImage = styled.img`\n  border-radius: 5px;\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.4);\n  max-width: 300px;\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  repoLink: PropTypes.string.isRequired,\n  projectId: PropTypes.number.isRequired,\n  demoLink: PropTypes.string,\n};\n\nexport default Project;\n","import React from 'react';\nimport { HeaderText } from 'components';\nimport styled, { keyframes } from 'styled-components';\nimport projectsList from './projectsList';\nimport Project from './Project';\n\nconst Projects = () => (\n  <ProjectsPageContainer id=\"projectsPage\" data-testid=\"projectsPage\">\n    <Header id=\"projectsPageHeader\" data-testid=\"projectsPageHeader\">\n      <HeaderText>Projects</HeaderText>\n    </Header>\n    <Main>\n      <ProjectsList id=\"projectsList\" data-testid=\"projectsList\">\n        {projectsList.map((project, i) => (\n          <Project\n            key={i}\n            title={project.title}\n            image={project.image}\n            description={project.description}\n            repoLink={project.repoLink}\n            projectId={i}\n            demoLink={project.demoLink}\n          />\n        ))}\n      </ProjectsList>\n    </Main>\n  </ProjectsPageContainer>\n);\n\nconst fadeInAnimation = keyframes`\n    0% { \n        opacity: 0; \n    } \n    100% { \n        opacity: 1; \n    } \n`;\n\nconst ProjectsPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  transition: 0.5s;\n  animation: ${fadeInAnimation} ease 1s;\n  animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n  @media (max-width: 975px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst Header = styled.header`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n`;\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst ProjectsList = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: grid;\n  list-style: none;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  overflow: auto;\n  max-height: 32rem;\n  @media (max-width: 975px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr;\n    overflow: visible;\n  }\n`;\n\nexport default Projects;\n"],"sourceRoot":""}